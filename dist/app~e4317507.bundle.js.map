{"version":3,"file":"app~e4317507.bundle.js","mappings":";iKAWA,QAPe,CACb,IAAKA,EAAAA,EACL,QAASA,EAAAA,EACT,cAAeC,EAAAA,EACf,YAAaC,EAAAA,mCCkBf,QA1BkB,CAChBC,2BAA0B,WACxB,IAAMC,EAAMC,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cACpCC,EAAaC,KAAKC,aAAaR,GACrC,OAAOO,KAAKE,aAAaH,EAC3B,EAEAI,8BAA6B,WAC3B,IAAMV,EAAMC,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cAC1C,OAAOE,KAAKC,aAAaR,EAC3B,EAEAQ,aAAY,SAACR,GACX,IAAMW,EAAaX,EAAIY,MAAM,KAC7B,MAAO,CACLC,SAAUF,EAAW,IAAM,KAC3BG,GAAIH,EAAW,IAAM,KACrBI,KAAMJ,EAAW,IAAM,KAE3B,EAEAF,aAAY,SAACH,GACX,OAAQA,EAAWO,SAAW,IAAH,OAAOP,EAAWO,UAAa,MAAQP,EAAWQ,GAAK,OAAS,KAAOR,EAAWS,KAAO,IAAH,OAAOT,EAAWS,MAAS,GAC9I,mSCtBF,gnGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBA+CA,QA7C4B,CACpBC,KAAI,YAA2D,sHAGnB,OAHrCC,EAAmB,EAAnBA,oBAAqBC,EAAU,EAAVA,WAAYC,EAAmB,EAAnBA,oBAC5C,EAAKC,qBAAuBH,EAC5B,EAAKI,YAAcH,EACnB,EAAKI,qBAAuBH,EAAoB,SAE1C,EAAKI,gBAAe,0CALyC,EAMrE,EAEMA,cAAa,WAAG,kHACV,OAAFV,EAAO,EAAKQ,YAAZR,GAAE,SAEA,EAAKW,mBAAmBX,GAAG,kCACnC,EAAKY,eAAe,sBAEpB,EAAKC,cAAc,0CAND,EAQtB,EAEMF,mBAAkB,SAACX,GAAI,kIACF,EAAKS,qBAAqBK,cAAcd,GAAG,OAApD,OAAVK,EAAa,EAAH,yBACPA,GAAU,0CAFQ,EAG7B,EAEAQ,YAAW,WAAG,WACZpB,KAAKc,qBAAqBQ,WAAYC,EAAAA,EAAAA,MAEnBC,SAASC,cAAc,eAC/BC,iBAAiB,QAAO,YAAE,8FAC7B,EAAKV,qBAAqBW,cAAc,EAAKZ,aAAY,OAC/D,EAAKE,gBAAgB,2CAEzB,EAEAE,aAAY,WAAG,WACbnB,KAAKc,qBAAqBQ,WAAYM,EAAAA,EAAAA,MAEnBJ,SAASC,cAAc,eAC/BC,iBAAiB,QAAO,YAAE,8FAC7B,EAAKV,qBAAqBa,iBAAiB,EAAKd,YAAYR,IAAG,OACrE,EAAKU,gBAAgB,2CAEzB,mSC5CF,ijNAiBA,QAhBgB,eADhB,EACgB,GADhB,EACgB,UAAG,uFACX,kBAAmBa,UAAS,gBAC2B,OAA3DC,QAAQC,IAAI,+CAA+C,0BAIP,OAAhDC,EAAK,IAAIC,EAAAA,GAAsB,kBAAiB,kBAG9CD,EAAGE,WAAU,OACnBJ,QAAQC,IAAI,6BAA6B,kDAEzCD,QAAQC,IAAI,oCAAqC,EAAF,IAAS,yDAb5D,+KAeC,kBAde","sources":["webpack://katalog-restoran/./src/scripts/routes/routes.js","webpack://katalog-restoran/./src/scripts/routes/url-parser.js","webpack://katalog-restoran/./src/scripts/utils/like-button-presenter.js","webpack://katalog-restoran/./src/scripts/utils/sw-register.js"],"sourcesContent":["import Home from '../views/pages/home';\r\nimport Detail from '../views/pages/detail';\r\nimport Favorite from '../views/pages/favorite';\r\n\r\nconst routes = {\r\n  '/': Home, // default page\r\n  '/home': Home,\r\n  '/detail/:id': Detail,\r\n  '/favorite': Favorite,\r\n};\r\n\r\nexport default routes;\r\n","const UrlParser = {\r\n  parseActiveUrlWithCombiner() {\r\n    const url = window.location.hash.slice(1).toLowerCase();\r\n    const splitedUrl = this._urlSplitter(url);\r\n    return this._urlCombiner(splitedUrl);\r\n  },\r\n\r\n  parseActiveUrlWithoutCombiner() {\r\n    const url = window.location.hash.slice(1).toLowerCase();\r\n    return this._urlSplitter(url);\r\n  },\r\n\r\n  _urlSplitter(url) {\r\n    const urlsSplits = url.split('/');\r\n    return {\r\n      resource: urlsSplits[1] || null,\r\n      id: urlsSplits[2] || null,\r\n      verb: urlsSplits[3] || null,\r\n    };\r\n  },\r\n\r\n  _urlCombiner(splitedUrl) {\r\n    return (splitedUrl.resource ? `/${splitedUrl.resource}` : '/') + (splitedUrl.id ? '/:id' : '') + (splitedUrl.verb ? `/${splitedUrl.verb}` : '');\r\n  },\r\n};\r\n\r\nexport default UrlParser;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport { createLikeRestaurantButtonTemplate, createUnlikeRestaurantButtonTemplate } from '../views/templates/template-creator';\r\n\r\nconst LikeButtonPresenter = {\r\n  async init({ likeButtonContainer, restaurant, favoriteRestaurants }) {\r\n    this._likeButtonContainer = likeButtonContainer;\r\n    this._restaurant = restaurant;\r\n    this._favoriteRestaurants = favoriteRestaurants;\r\n\r\n    await this._renderButton();\r\n  },\r\n\r\n  async _renderButton() {\r\n    const { id } = this._restaurant;\r\n\r\n    if (await this._isRestaurantExist(id)) {\r\n      this._renderLiked();\r\n    } else {\r\n      this._renderLike();\r\n    }\r\n  },\r\n\r\n  async _isRestaurantExist(id) {\r\n    const restaurant = await this._favoriteRestaurants.getRestaurant(id);\r\n    return !!restaurant;\r\n  },\r\n\r\n  _renderLike() {\r\n    this._likeButtonContainer.innerHTML = createLikeRestaurantButtonTemplate();\r\n\r\n    const likeButton = document.querySelector('#likeButton');\r\n    likeButton.addEventListener('click', async () => {\r\n      await this._favoriteRestaurants.putRestaurant(this._restaurant);\r\n      this._renderButton();\r\n    });\r\n  },\r\n\r\n  _renderLiked() {\r\n    this._likeButtonContainer.innerHTML = createUnlikeRestaurantButtonTemplate();\r\n\r\n    const likeButton = document.querySelector('#likeButton');\r\n    likeButton.addEventListener('click', async () => {\r\n      await this._favoriteRestaurants.deleteRestaurant(this._restaurant.id);\r\n      this._renderButton();\r\n    });\r\n  },\r\n};\r\n\r\nexport default LikeButtonPresenter;\r\n","import * as WorkboxWindow from \"workbox-window\";\r\n\r\nconst swRegister = async () => {\r\n  if (!(\"serviceWorker\" in navigator)) {\r\n    console.log(\"Service Worker not supported in the browser\");\r\n    return;\r\n  }\r\n\r\n  const wb = new WorkboxWindow.Workbox(\"./sw.bundle.js\");\r\n\r\n  try {\r\n    await wb.register();\r\n    console.log(\"Service worker registered\");\r\n  } catch (error) {\r\n    console.log(\"Failed to register service worker\", error);\r\n  }\r\n};\r\n\r\nexport default swRegister;\r\n"],"names":["Home","Detail","Favorite","parseActiveUrlWithCombiner","url","window","location","hash","slice","toLowerCase","splitedUrl","this","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","split","resource","id","verb","i","init","likeButtonContainer","restaurant","favoriteRestaurants","_likeButtonContainer","_restaurant","_favoriteRestaurants","_renderButton","_isRestaurantExist","_renderLiked","_renderLike","getRestaurant","innerHTML","createLikeRestaurantButtonTemplate","document","querySelector","addEventListener","putRestaurant","createUnlikeRestaurantButtonTemplate","deleteRestaurant","navigator","console","log","wb","WorkboxWindow","register"],"sourceRoot":""}